//
//  TTSDKDemo.pch
//  TTSDKDemo
//
//  Created by 陈昭杰 on 2020/1/15.
//  Copyright © 2020 ByteDance. All rights reserved.
//

#ifndef TTSDKDemo_pch
#define TTSDKDemo_pch

#if __has_include(<TTSDKFramework/TTSDKFramework.h>)
#import <TTSDKFramework/TTSDKFramework.h>
#else
#import <TTSDK/TTSDKManager.h>
#import <TTSDK/TTVideoEngineHeader.h>
//推流
#import <TTSDK/LiveCore.h>
#import <TTSDK/LiveCore+Capture.h>
#import <TTSDK/LiveStreamHelper.h>
#import <TTSDK/LiveStreamRawDataHelper.h>
//拉流
#import <TTSDK/TTVideoLive.h>
#import <TTSDK/BDWebImage.h>
#import <TTSDK/TTFileUploader.h>
#endif

#if __has_include(<TTSDKImageFramework/TTSDKImageFramework.h>)
#import <TTSDKImageFramework/TTSDKImageFramework.h>
#endif

//MARK: 音效相关
#define USE_EFFECT 1
#if USE_EFFECT
    #if __has_include(<TTSDKFramework/TTSDKFramework.h>)
    #import <TTSDKFramework/LiveCore+KTV.h>
    #else
    #import <TTSDK/LiveCore+KTV.h>
    #endif
#endif

#import <UIKit/UIKit.h>
#import <Foundation/Foundation.h>
#import "TTVideoPlayerDemoDefine.h"
#import <YYCategories/UIColor+YYAdd.h>
#import <YYCategories/UIView+YYAdd.h>
#import <YYCategories/NSString+YYAdd.h>
#import <YYCategories/UIImage+YYAdd.h>
#import <YYCategories/YYCategoriesMacro.h>
#import <YYCategories/NSObject+YYAddForKVO.h>
#import "NSString+TTVideo.h"
#import "UIView+TTVideo.h"
#import <MJExtension/NSObject+MJKeyValue.h>
#import <ReactiveObjc/ReactiveObjC.h>

/// Color
#define TT_COLOR(r,g,b,a) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:a]
#define TT_COLOR_HEX(hexString) [UIColor colorWithHexString:hexString]
#define TT_THEME_COLOR TT_COLOR_HEX(@"#00c1de")
#define STATUS_BAR_BOTTOM (TT_SIZE_IS_IPHONEX_SERIES() ? (44.0) : (20.0))
#define NAVIGATIONBAR_BOTTOM (TT_SIZE_IS_IPHONEX_SERIES() ? (88.0) : (64.0))
#define SAFE_AREA_BOTTOM (TT_SIZE_IS_IPHONEX_SERIES() ? (34.0) : (0.0))

/// Font
#define TT_FONT(size) [UIFont systemFontOfSize:size]
#define TT_FONT_BLOD(size) [UIFont boldSystemFontOfSize:size]

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-function"
static inline CGFloat TT_GET_RESIZE_BASE_375(CGFloat x){
    static CGFloat rate = 0.0;
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        rate = (MIN([UIScreen mainScreen].bounds.size.width, [UIScreen mainScreen].bounds.size.height) / 375.0);
    });
    return ceil(x * rate);
}
#pragma clang diagnostic pop
/// Resize
#define TT_BASE_375(x) (TT_GET_RESIZE_BASE_375(x))
#define TT_EDGE TT_BASE_375(15.0)
#define TT_ONE_PIXEL (ceil(1.0 / [UIScreen mainScreen].scale))

#define SCREEN_WIDTH  [[UIScreen mainScreen] bounds].size.width
#define SCREEN_HEIGHT [[UIScreen mainScreen] bounds].size.height

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunused-function"
static inline BOOL TT_SIZE_IS_IPHONEX_SERIES(void) {
    static BOOL iPhoneXSeries = NO;
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        if (@available(iOS 11.0, *)) {
            if (UIDevice.currentDevice.userInterfaceIdiom == UIUserInterfaceIdiomPhone) {
                UIWindow *mainWindow = [[[UIApplication sharedApplication] delegate] window];
                if (mainWindow.safeAreaInsets.bottom > 0.0) {
                    iPhoneXSeries = YES;
                }
            }
        }
    });
    return iPhoneXSeries;
}
#pragma clang diagnostic pop

/// Log
#ifdef DEBUG
#define Log(fmt, ...) NSLog((@"%s [Line %d] " fmt), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__)
#else
#define Log(...)
#endif

#ifndef weakify
#if DEBUG
#if __has_feature(objc_arc)
#define weakify(object) autoreleasepool{} __weak __typeof__(object) weak##_##object = object;
#else
#define weakify(object) autoreleasepool{} __block __typeof__(object) block##_##object = object;
#endif
#else
#if __has_feature(objc_arc)
#define weakify(object) try{} @finally{} {} __weak __typeof__(object) weak##_##object = object;
#else
#define weakify(object) try{} @finally{} {} __block __typeof__(object) block##_##object = object;
#endif
#endif
#endif

#ifndef strongify
#if DEBUG
#if __has_feature(objc_arc)
#define strongify(object) autoreleasepool{} __typeof__(object) object = weak##_##object;
#else
#define strongify(object) autoreleasepool{} __typeof__(object) object = block##_##object;
#endif
#else
#if __has_feature(objc_arc)
#define strongify(object) try{} @finally{} __typeof__(object) object = weak##_##object;
#else
#define strongify(object) try{} @finally{} __typeof__(object) object = block##_##object;
#endif
#endif
#endif

#endif /* TTSDKDemo_pch */
